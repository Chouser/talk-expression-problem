public class PurchaseOrder {
  public id;
  public date;
  public amount;

  public PurchaseOrder(id, date, amount) {
    this.id = id;
    this.date = date;
    this.amount = amount;
  }

  public static getTestData() {
    data = new Vector();
    data.add(new PurchaseOrder(1, "2010-01-01", 12.99));
    data.add(new PurchaseOrder(2, "2010-02-02", 24.98));
    data.add(new PurchaseOrder(3, "2010-03-03", 18.85));
    return data;
  }
}

public class InventoryItem {
  public description;
  public quantity;

  public InventoryItem(description, quantity) {
    this.description = description;
    this.quantity = quantity;
  }

  public static getTestData() {
    data = new Vector();
    data.add(new InventoryItem("Widget", 28));
    data.add(new InventoryItem("Gizmo",  32));
    data.add(new InventoryItem("Thingy", 38));
    return data;
  }
}


public class HtmlReport {
  public printReport(data) {
    System.println("<table>");
    // table header:
    System.println("  <tr>");
    for(columnName in data[0].getColumnNames()) {
      System.println("    <th>", columnName, "</th>");
    }
    System.println("  </tr>");

    // table body:
    for(row in data) {
      System.println("  <tr>");
      for(columnName in row.getColumnNames()) {
        System.println("    <td>", row.getValue(columnName), "</td>");
      }
      System.println("  </tr>");
    }
    System.println("</table>");
  }
}

//----

abstract class DataRow {
  public getColumnNames();
  public getValue(columnName);
}

public class PurchaseOrder {
  public id;
  public date;
  public amount;

  public PurchaseOrder(id, date, amount) {
    this.id = id;
    this.date = date;
    this.amount = amount;
  }

  public static getTestData() {
    data = new Vector();
    data.add(new PurchaseOrder(1, "2010-01-01", 12.99));
    data.add(new PurchaseOrder(2, "2010-02-02", 24.98));
    data.add(new PurchaseOrder(3, "2010-03-03", 18.85));
    return data;
  }

  // DataRow:
  public getColumnNames() {
    cols = new Vector();
    cols.add("id");
    cols.add("date");
    cols.add("amount");
    return cols;
  }

  public getValue(columnName) {
    if(columnName == "id") return this.id;
    else if(columnName == "date") return this.date;
    else if(columnName == "amount") return this.amount;
  }
}

public class InventoryItem implements DataRow {
  public description;
  public quantity;

  public InventoryItem(description, quantity) {
    this.description = description;
    this.quantity = quantity;
  }

  public static getTestData() {
    data = new Vector();
    data.add(new InventoryItem("Widget", 28));
    data.add(new InventoryItem("Gizmo",  32));
    data.add(new InventoryItem("Thingy", 38));
    return data;
  }

  // DataRow:
  public getColumnNames() {
    cols = new Vector();
    cols.add("description");
    cols.add("quantity");
    cols.add("unit cost");
    cols.add("total cost");
    return cols;
  }

  public getValue(columnName) {
    if(columnName == "description") return this.description;
    else if(columnName == "quantity") return this.quantity;
  }
}

