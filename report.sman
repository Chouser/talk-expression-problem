public class InventoryItem {
  public description;
  public count;

  public InventoryItem(description, count) {
    this.description = description;
    this.count = count;
  }

  public static getTestData() {
    data = new Vector();
    data.add(new InventoryItem("Widget", 28));
    data.add(new InventoryItem("Gizmo",  32));
    data.add(new InventoryItem("Thingy", 38));
    return data;
  }
}

public class PurchaseOrder {
  public id;
  public date;
  public ammount;

  public PurchaseOrder(id, date, ammount) {
    this.id = id;
    this.date = date;
    this.ammount = ammount;
  }

  public static getTestData() {
    data = new Vector();
    data.add(new PurchaseOrder(1, "2010-01-01", 12.99));
    data.add(new PurchaseOrder(2, "2010-02-02", 24.98));
    data.add(new PurchaseOrder(3, "2010-03-03", 18.85));
    return data;
  }
}





abstract class DataRow {
  public getColumnNames();
  public getValue(columnName);
}

public class Person implements DataRow {
  public name;
  public age;

  public Person(name, age) {
    this.name = name;
    this.age = age;
  }

  public getColumnNames() {
    ...
  }

  public getValue(columnName) {
    if(columnName == "name") return this.name;
    else if(columnName == "age") return this.age;
    return;
  }
}

public class TestData {
  public static getTestData() {
    data = new Vector();
    data.add(new Person("Andrew", 28));
    data.add(new Person("Bill"  , 38));
    data.add(new Person("Carrie", 32));
    return data;
  }
}






public class Person {
  public String name;
  public Integer age;

  public Person(String name, Integer age) {
    this.name = name;
    this.age = age;
  }
}

public class TestData {
  public static Vector getTestData() {
    Vector data = new Vector();
    data.add(new Person("Andrew", 28));
    data.add(new Person("Bill"  , 38));
    data.add(new Person("Carrie", 32));
    return data;
  }
}
